# Generated by Django 3.0.2 on 2020-01-30 07:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseBlog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('baseblog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.BaseBlog')),
                ('text', models.TextField(verbose_name='text_of_blog')),
                ('pic_of_text', models.FileField(upload_to='', verbose_name='picture_of_text')),
                ('category_of_text', models.CharField(max_length=50, verbose_name='category_of_text')),
                ('count_of_visits', models.IntegerField(verbose_name='count_of_visit')),
                ('count_of_comments', models.IntegerField(verbose_name='count_of_comment')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_of_blog', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('blog.baseblog',),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('baseblog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.BaseBlog')),
                ('author_of_comment_on_blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_of_comment_on_blog', to=settings.AUTH_USER_MODEL)),
                ('blog_of_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_of_comment', to='blog.Blog')),
            ],
            bases=('blog.baseblog',),
        ),
    ]
